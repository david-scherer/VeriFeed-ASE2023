version: "3"
services:
  db:
    image: postgres:14.1-alpine
    restart: always
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - verinet
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
  mailserver:
    image: maildev/maildev
    restart: always
    networks:
      - verinet
    ports:
      - "1025:1025"
      - "1080:1080"
  frontend:
    build: ./frontend
    volumes:
      - "./frontend:/usr/src/app"
    networks:
      - verinet
    ports:
      - "4200:4200"
    ulimits:
      nofile:
        hard: 40000
        soft: 40000
  core:
    build:
      dockerfile: Dockerfile-dev
      context: ./core
    networks:
      - verinet
    ports:
      - "8080:8080"
    environment:
      - RECOGNITION_HOST=http://recognition:5002/api/v1
      - SCRAPING_HOST=http://scraping:5003/api/v1
      - MAIL_HOST=mailserver
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - db
      - mailserver
  extraction:
    container_name: extraction
    build: ./extraction
    networks:
      - verinet
    ports:
      - "5001:5001"
  recognition:
    container_name: recognition
    build: ./recognition
    networks:
      - verinet
    ports:
      - "5002:5002"
  scraping:
    container_name: scraping
    build: ./scraping
    networks:
      - verinet
      - mastodon-network
    ports:
      - "5003:5003"

volumes:
  db:
    driver: local

networks:
  mastodon-network:
    name: mastodon-instance_mastonet
    external: true
  verinet:
